// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  // todo: WTF Cannot set complex string in Okteto env, lead to leaking this fucking way
  url      = "mongodb+srv://tinpham:VJOVQ9F1E8vXhyVc@cluster0.jyi5oeo.mongodb.net/shoppik?retryWrites=true&w=majority"
}

generator zod {
  provider                  = "zod-prisma-types"
  output                    = "../../../packages/schema/generated"
  createInputTypes          = false
  coerceDate                = false
  addSelectType             = false
  addInputTypeValidation    = true
  createRelationValuesTypes = true
}

//  =============================================== COMMON MODULE =====================================================
enum Sort {
  ASC
  DESC
}

type Pagination {
  page     Int
  pageSize Int
  sortBy   String
  sort     Sort
}

//  =============================================== AUTH MODULE =====================================================

enum SigninMethod {
  GOOGLE
  TELEGRAM
}

type Customer {
  trustscore Int
  updatedAt  DateTime?
}

type Owner {
  storeId String @db.ObjectId
}

model Account {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  email        String
  fullname     String /// @zod.string.min(4, { message: "min error" }).max(128, { message: "max error" })
  firstname    String /// @zod.string.min(2, { message: "min error" }).max(64, { message: "max error" })
  lastname     String /// @zod.string.min(2, { message: "min error" }).max(64, { message: "max error" })
  phoneNumber  String /// @zod.string.max(16, { message: "max error" })
  birthday     String /// @zod.string.max(32, { message: "max error" })
  locale       String /// @zod.string.max(2, { message: "max error" })
  avatar       String /// @zod.string.max(1024, { message: "max error" })
  postalCode   String /// @zod.string.max(16, { message: "max error" })
  isConfirm    Boolean
  signinMethod SigninMethod
  roleCustomer Customer
  roleOwner    Owner?
  createdAt    DateTime
  updatedAt    DateTime?
  isDeleted    Boolean?
  deletedAt    DateTime?
}

//  =============================================== STORE MODULE =====================================================
type StoreTag {
  id   String @db.ObjectId
  name String
  slug String
}

type StoreRating {
  score        Int @default(5)
  reviews      Int @default(0)
  responseTime Int @default(99)
}

type Contact {
  email         String
  phone         String[]
  youtubeLink   String?
  facebookLink  String?
  instagramLink String?
}

enum StoreStatus {
  ACTIVE
  INACTIVE
  CLOSED
  DELETED
}

type StoreAddress {
  province String
  district String
  ward     String
  street   String
  note     String?
}

model Store {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  name           String /// @zod.string.min(2, { message: "min error" }).max(1024, { message: "max error" })
  slug           String
  tradeName      String /// @zod.string.max(1024, { message: "max error" })
  description    String /// @zod.string.max(4096, { message: "max error" })
  avatar         String /// @zod.string.max(4096, { message: "max error" })
  storeAddress   StoreAddress
  landingPageUrl String /// @zod.string.max(4096, { message: "max error" })
  ownerId        String       @db.ObjectId
  followers      String[]     @db.ObjectId
  following      String[]     @db.ObjectId
  tags           StoreTag[]
  rating         StoreRating
  contact        Contact
  storeStatus    StoreStatus
  isDeleted      Boolean
  DeletedAt      DateTime?
  createdAt      DateTime
  updatedAt      DateTime?
}

//  =============================================== PRODUCT MODULE =====================================================

type AttributePattern {
  k String
  v String
  u String?
}

type ProductRating {
  score   Int @default(5)
  reviews Int @default(0)
  sold    Int @default(0)
}

model ShoppikCategory {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  isSubCategory Boolean
  parentId      String[] @db.ObjectId
}

model Product {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  storeId           String             @db.ObjectId
  name              String
  slug              String
  description       String
  keyFeatures       String[]
  images            String[]
  originPrice       Int
  quantity          Int
  rating            ProductRating
  storeCategories   StoreTag[]
  shoppikCategories String[]           @db.ObjectId
  variants          AttributePattern[]
  detail            AttributePattern[]
  isDraft           Boolean
  createdAt         DateTime
  lastSavedAt       DateTime
  isDeleted         Boolean
  DeletedAt         DateTime?
}
