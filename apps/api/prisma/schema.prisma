// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  // todo: WTF Cannot set complex string in Okteto env, lead to leaking this fucking way
  url      = "mongodb+srv://tinpham:n6PgPOmj4i3nKQb3@cluster0.jyi5oeo.mongodb.net/shoppik?retryWrites=true&w=majority"
}

generator zod {
  provider               = "pnpm zod-prisma-types"
  output                 = "../../../packages/schema/generated"
  createInputTypes       = false
  coerceDate             = false
  addSelectType          = false
  addInputTypeValidation = true
}

//  =============================================== AUTH MODULE =====================================================

enum Roles {
  ADMIN
  CUSTOMER
  OWNER
}

enum SigninMethod {
  GOOGLE
  TELEGRAM
}

model Role {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       Roles
  permission String[]  @default([])
  createdAt  DateTime
  updatedAt  DateTime?
}

model Customer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  createdAt DateTime
  updatedAt DateTime?
}

model Owner {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  storeId   String[]  @db.ObjectId
  createdAt DateTime
  updatedAt DateTime?
}

type Session {
  accessToken  String
  iat          Int
  exp          Int
  sub          String
  scope        String
  locale       String
  signinMethod SigninMethod
}

model Account {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  roleId       String[]     @db.ObjectId
  email        String
  fullname     String
  phoneNumber  String /// @zod.string.min(9, { message: "min error" }).max(10, { message: "max error" })
  birthday     String
  avatar       String
  postalCode   String
  isConfirm    Boolean
  sessions     Session[]
  signinMethod SigninMethod
  createdAt    DateTime
  updatedAt    DateTime? /// @zod.date({ invalid_type_error: "wrong date type" })
  isDeleted    Boolean?
  deletedAt    DateTime?
}

//  =============================================== STORE MODULE =====================================================
type StoreTag {
  name String
  slug String
}

type StoreRating {
  score        Int @default(5)
  reviews      Int @default(0)
  responseTime Int @default(99)
}

type Contact {
  phone         String[]
  youtubeLink   String
  facebookLink  String
  instagramLink String
}

enum StoreStatus {
  ACTIVE
  INACTIVE
  CLOSED
  DELETED
}

model Store {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  slug           String
  tradeName      String
  description    String
  avatar         String
  landingPageUrl String
  ownerId        String      @db.ObjectId
  followers      String[]    @db.ObjectId
  following      String[]    @db.ObjectId
  tags           StoreTag[]
  rating         StoreRating
  contact        Contact 
  storeStatus    StoreStatus
  createdAt      DateTime
  updatedAt      DateTime?
  isDeleted      Boolean
  DeletedAt      DateTime?
}
