// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://rootuser:rootpassword@mongodb:27017/shoppik?directConnection=true&authSource=admin"
}

//  =============================================== AUTH MODULE =====================================================

enum Roles {
  ADMIN
  CUSTOMER
  OWNER
}

enum SigninMethod {
  GOOGLE
  TELEGRAM
}

model Role {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       Roles
  permission String[]  @default([])
  createdAt  DateTime
  updatedAt  DateTime?
}

model Customer {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  createdAt DateTime
  updatedAt DateTime?
}

model Owner {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  storeId   String[]  @db.ObjectId
  createdAt DateTime
  updatedAt DateTime?
}

model Account {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  roleId       String[]     @db.ObjectId
  email        String
  fullname     String
  phoneNumber  String
  birthday     String
  avatar       String
  postalCode   String
  isConfirm    Boolean
  signinMethod SigninMethod
  createdAt    DateTime
  updatedAt    DateTime?
  isDeleted    Boolean?
  DeletedAt    DateTime?
}

//  =============================================== STORE MODULE =====================================================
type StoreTag {
  name String
  slug String
}

type StoreRating {
  score        Int @default(5)
  reviews      Int @default(0)
  responseTime Int @default(99)
}

type Contact {
  phone         String[]
  youtubeLink   String
  facebookLink  String
  instagramLink String
}

enum StoreStatus {
  ACTIVE
  INACTIVE
  CLOSED
  DELETED
}

model Store {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  slug           String
  tradeName      String
  description    String
  avatar         String
  landingPageUrl String
  ownerId        String      @db.ObjectId
  followers      String[]    @db.ObjectId
  following      String[]    @db.ObjectId
  tags           StoreTag[]
  rating         StoreRating
  contact        Contact
  storeStatus    StoreStatus
  createdAt      DateTime
  updatedAt      DateTime?
  isDeleted      Boolean
  DeletedAt      DateTime?
}
